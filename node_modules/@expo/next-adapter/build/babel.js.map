{"version":3,"file":"babel.js","sourceRoot":"","sources":["../src/babel.ts"],"names":[],"mappings":";AAAA,2HAA2H;AAE3H,IAAI,iBAAiB,GAAG,KAAK,CAAC;AAE9B,MAAM,CAAC,OAAO,GAAG,UAAU,GAAQ;IACjC,wGAAwG;IACxG,MAAM,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,MAAyB,EAAE,EAAE,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,cAAc,CAAC,CAAC;IAElG,0BAA0B;IAC1B,IAAI,CAAC,iBAAiB,EAAE;QACtB,iBAAiB,GAAG,IAAI,CAAC;QACzB,gDAAgD;QAChD,MAAM,eAAe,GAAG,CAAC,mBAAmB,EAAE,KAAK,IAAI,YAAY,CAAC,CAAC,MAAM,CACzE,WAAW,CAAC,EAAE,CAAC,WAAW,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CACtD,CAAC;QACF,wCAAwC;QACxC,IAAI,eAAe,CAAC,MAAM;YACxB,MAAM,IAAI,KAAK,CACb,8EAA8E,eAAe,CAAC,IAAI,CAChG,IAAI,CACL,EAAE,CACJ,CAAC;KACL;IAED,OAAO;QACL,OAAO,EAAE;YACP,OAAO,CAAC,mBAAmB,CAAC;YAC5B,iEAAiE;YACjE,KAAK,IAAI,OAAO,CAAC,YAAY,CAAC;SAC/B,CAAC,MAAM,CAAC,OAAO,CAAC;KAClB,CAAC;AACJ,CAAC,CAAC;AAEF,SAAS,SAAS,CAAC,IAAY;IAC7B,IAAI;QACF,OAAO,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KAChC;IAAC,OAAO,KAAK,EAAE;QACd,IAAI,KAAK,CAAC,IAAI,KAAK,kBAAkB,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;YACrE,OAAO,KAAK,CAAC;SACd;QACD,MAAM,KAAK,CAAC;KACb;AACH,CAAC","sourcesContent":["// Learn more: https://github.com/expo/expo/blob/master/docs/pages/versions/unversioned/guides/using-nextjs.md#shared-steps\n\nlet hasCheckedModules = false;\n\nmodule.exports = function (api: any) {\n  // Detect web usage (this may change in the future if Next.js changes the loader to `next-babel-loader`)\n  const isWeb = api.caller((caller?: { name: string }) => caller && caller.name === 'babel-loader');\n\n  // Check peer dependencies\n  if (!hasCheckedModules) {\n    hasCheckedModules = true;\n    // Only check for next support in the browser...\n    const missingPackages = ['babel-preset-expo', isWeb && 'next/babel'].filter(\n      packageName => packageName && !hasModule(packageName)\n    );\n    // Throw an error if anything is missing\n    if (missingPackages.length)\n      throw new Error(\n        `[BABEL]: preset \\`@expo/next-adapter/babel\\` is missing peer dependencies: ${missingPackages.join(\n          ', '\n        )}`\n      );\n  }\n\n  return {\n    presets: [\n      require('babel-preset-expo'),\n      // Only use next in the browser, it'll break your native project/\n      isWeb && require('next/babel'),\n    ].filter(Boolean),\n  };\n};\n\nfunction hasModule(name: string): boolean {\n  try {\n    return !!require.resolve(name);\n  } catch (error) {\n    if (error.code === 'MODULE_NOT_FOUND' && error.message.includes(name)) {\n      return false;\n    }\n    throw error;\n  }\n}\n"]}